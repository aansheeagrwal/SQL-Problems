Problem statement
Table: Queries

+-------------+---------+
| Column Name | Type    |
+-------------+---------+
| query_name  | varchar |
| result      | varchar |
| position    | int     |
| rating      | int     |
+-------------+---------+
There is no primary key for this table, it may have duplicate rows.
This table contains information collected from some queries on a database.
The position column has a value from 1 to 500.
The rating column has a value from 1 to 5. Query with rating less than 3 is a poor query.


 We define query quality as:

 The average of the ratio between query rating and its position.

 Write an SQL query to find each query_name, the quality.

 Quality should be rounded to 2 decimal places.

 The query result format is in the following example:

Queries table:
 +------------+-------------------+----------+--------+
 | query_name | result            | position | rating |
 +------------+-------------------+----------+--------+
 | Dog        | Golden Retriever  | 1        | 5      |
 | Dog        | German Shepherd   | 2        | 5      |
 | Dog        | Mule              | 200      | 1      |
 | Cat        | Shirazi           | 5        | 2      |
 | Cat        | Siamese           | 3        | 3      |
 | Cat        | Sphynx            | 7        | 4      |
 +------------+-------------------+----------+--------+

 Result table:
 +------------+---------+
 | query_name | quality |
 +------------+---------+
 | Dog        | 2.50    |
 | Cat        | 0.66    | 
 +------------+---------+

 Dog queries quality is ((5 / 1) + (5 / 2) + (1 / 200)) / 3 = 2.50

 Cat queries quality equals ((2 / 5) + (3 / 3) + (4 / 7)) / 3 = 0.66

Query Solution:-
SELECT 
    query_name,
    ROUND(AVG(rating * 1.0 / position), 2) AS quality
FROM Queries
GROUP BY query_name;
